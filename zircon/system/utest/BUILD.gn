# Copyright 2019 The Fuchsia Authors. All rights reserved.
# Use of this source code is governed by a BSD-style license that can be
# found in the LICENSE file.

import("$zx/public/gn/config/standard.gni")
import("$zx/public/gn/toolchain/environment_redirect.gni")
import("$zx/public/gn/zbi.gni")

if (current_cpu != "") {
  group("utest") {
    testonly = true

    # For unittests, the recommended naming scheme is:
    #   path/to/code/test
    # or
    #   path/to/code:test
    #
    # Where "test" is a group containing all unittest labels.
    deps = [
      ":host",  # TODO(mcgrathr): reach this differently?
#------------------
      "$zx/system/core/bootsvc/test",
#------------------
#------------------
      "$zx/system/core/console:console-test",
#------------------
#------------------
      "$zx/system/core/devmgr/fshost:block-watcher-test",
#------------------
#------------------
      "$zx/system/core/devmgr/fshost:fshost-metrics-test",
#------------------
#------------------
      "$zx/system/core/devmgr/fshost:fshost-test",
#------------------
#------------------
      "$zx/system/core/netsvc:netsvc-stress-test",
#------------------
#------------------
      "$zx/system/core/netsvc:netsvc-test",
#------------------
#------------------
      "$zx/system/core/ptysvc:ptysvc-test",
#------------------
#------------------
      "$zx/system/core/svchost:crashsvc-test",
#------------------
#------------------
#------------------
#------------------
#------------------
#------------------
#------------------
#------------------
#------------------
#------------------
#------------------
#------------------
#------------------
#------------------
#------------------
#------------------
#------------------
#------------------
#------------------
#------------------
#------------------
#------------------
      "$zx/system/ulib/c/test",
#------------------
#------------------
#------------------
#------------------
#------------------
#------------------
      "$zx/system/ulib/elfload/test",
#------------------
#------------------
      "$zx/system/ulib/fdio/test",
#------------------
#------------------
#------------------
#------------------
#------------------
#------------------
#------------------
#------------------
      "$zx/system/ulib/hermetic-compute/test",
#------------------
#------------------
      "$zx/system/ulib/hermetic-decompressor/test",
#------------------
#------------------
      "$zx/system/ulib/kernel-mexec:kernel-mexec-test",
#------------------
#------------------
      "$zx/system/ulib/lazy_init:lazy_init-test",
#------------------
#------------------
      "$zx/system/ulib/lockdep:test",
#------------------
#------------------
#------------------
#------------------
#------------------
#------------------
#------------------
#------------------
#------------------
#------------------
#------------------
#------------------
#------------------
#------------------
#------------------
#------------------
      "$zx/system/ulib/zbi-bootfs/test",
#------------------
#------------------
#------------------
#------------------
#------------------
#------------------
      "$zx/third_party/ulib/backtrace:test",
#------------------
#------------------
      "$zx/third_party/ulib/linenoise:test",
#------------------
#------------------
      "$zx/third_party/ulib/lz4:test",
#------------------
#------------------
      "abi-type-validator",
#------------------
#------------------
      "channel-fatal",
#------------------
#------------------
      "core",
#------------------
#------------------
#------------------
#------------------
      "fidl",
#------------------
#------------------
#------------------
#------------------
#------------------
#------------------
#------------------
#------------------
#------------------
#------------------
      "kcounter",
#------------------
#------------------
      "kernel-cmdline:test",
#------------------
#------------------
      "log",
#------------------
#------------------
#------------------
#------------------
      "mexec",
#------------------
#------------------
#------------------
#------------------
      "policy",
#------------------
#------------------
      "stdio",
#------------------
#------------------
#------------------
#------------------
#------------------
#------------------
#------------------
#------------------
#------------------

      # disabled for now:
      #"bad-kernel-access",

      # TODO(fuzztest): "edid"
    ]
    if (current_cpu == "x64") {
      deps += [
#------------------
#------------------
#------------------
#------------------
#------------------
#------------------
#------------------
#------------------
#------------------
#------------------
#------------------
#------------------
      ]
    }
  }

  # This plus a kernel in deps makes a tiny zbi() that just runs core-tests.
  zbi_input("core-tests") {
    testonly = true
    type = "cmdline"
    args = [
      "--entry=userboot=bin/core-tests",
      "--entry=userboot.shutdown",
    ]
    deps = [ "$zx/system/utest/core:core-tests" ]
  }

  group("host-tests") {
    testonly = true
    deps = [
#------------------
#------------------
#------------------
#------------------
#------------------
#------------------
#------------------
#------------------
#------------------
#------------------
#------------------
      "$zx/system/ulib/hwreg/test/asm",
#------------------
#------------------
      "$zx/tools/kazoo:tests",
#------------------
#------------------
      "fidl",
#------------------
#------------------
      "fidl-compiler",
#------------------
#------------------
#------------------
#------------------
#------------------
#------------------
#------------------
    ]
    if (current_os == "linux") {
      deps += [
#------------------
#------------------
#------------------
#------------------
      ]
    }
  }
}

# Build the host tests for each host.
foreach(host, standard_build_hosts) {
  environment_redirect("host-tests-${host.os}-${host.cpu}") {
    testonly = true
    environment_label = "$zx/public/gn/toolchain:host"
    cpu = host.cpu
    os = host.os
    direct = true
    deps = [ ":host-tests" ]
  }
}

group("host-tests-all-platforms") {
  testonly = true
  deps = []
  foreach(host, standard_build_hosts) {
    deps += [ ":host-tests-${host.os}-${host.cpu}" ]
  }
}

group("host") {
  testonly = true
  deps = [ ":host-tests-${host_os}-${host_cpu}" ]
}
