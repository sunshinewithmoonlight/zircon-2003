# Copyright 2019 The Fuchsia Authors. All rights reserved.
# Use of this source code is governed by a BSD-style license that can be
# found in the LICENSE file.

##########################################
# Though under //zircon, this build file #
# is meant to be used in the Fuchsia GN  #
# build.                                 #
# See fxb/36139.                         #
##########################################

assert(!defined(zx) || zx != "/",
       "This file can only be used in the Fuchsia GN build.")

import("//build/test.gni")
import("//build/unification/images/migrated_manifest.gni")

test("fs") {
  # Dependent manifests unfortunately cannot be marked as `testonly`.
  # TODO(44278): Remove when converting this file to proper GN build idioms.
  testonly = false
  configs += [ "//build/unification/config:zircon-migrated" ]
  test_group = "fs"
  sources = [
    "filesystems.cc",
    "main.cc",
    "misc.cc",
    "test-access.cc",
    "test-append.cc",
    "test-attr.cc",
    "test-basic.cc",
    "test-clone.cc",
    "test-directory.cc",
    "test-dot-dot.cc",
    "test-fcntl.cc",
    "test-get-buffer.cc",
    "test-link.cc",
    "test-lseek.cc",
    "test-maxfile.cc",
    "test-minfs.cc",
    "test-mmap.cc",
    "test-overflow.cc",
    "test-persist.cc",
    "test-random-op.cc",
    "test-realpath.cc",
    "test-rename.cc",
    "test-resize.cc",
    "test-rw-workers.cc",
    "test-rw.cc",
    "test-sparse.cc",
    "test-sync.cc",
    "test-threading.cc",
    "test-truncate.cc",
    "test-unlink.cc",
    "test-watcher.cc",
    "wrap.c",
  ]

  wrap_symbols = [
    "chdir",
    "link",
    "mkdir",
    "open",
    "opendir",
    "realpath",
    "remove",
    "rename",
    "renameat",
    "rmdir",
    "stat",
    "symlink",
    "truncate",
    "unlink",
    "utimes",
  ]
  ldflags = []
  foreach(symbol, wrap_symbols) {
    ldflags += [ "-Wl,--wrap,$symbol" ]
  }

  deps = [
    "//zircon/public/lib/async",
    "//zircon/public/lib/async-cpp",
    "//zircon/public/lib/async-default",
    "//zircon/public/lib/async-loop",
    "//zircon/public/lib/async-loop-cpp",
    "//zircon/public/lib/async-loop-default",
    "//zircon/public/lib/block-client",
    "//zircon/public/lib/boringssl",
    "//zircon/public/lib/cobalt-client",
    "//zircon/public/lib/digest",
    "//zircon/public/lib/fbl",
    "//zircon/public/lib/fdio",
    "//zircon/public/lib/fdio-caller",
    "//zircon/public/lib/fs",
    "//zircon/public/lib/fs-management",
    "//zircon/public/lib/fvm",
    "//zircon/public/lib/fzl",
    "//zircon/public/lib/gpt",
    "//zircon/public/lib/memfs",
    "//zircon/public/lib/minfs",
    "//zircon/public/lib/ramdevice-client",
    "//zircon/public/lib/sync",
    "//zircon/public/lib/trace",
    "//zircon/public/lib/trace-engine",
    "//zircon/public/lib/unittest",
    "//zircon/public/lib/zircon-internal",
    "//zircon/public/lib/zx",
    "//zircon/system/fidl/fuchsia-cobalt:c",
    "//zircon/system/fidl/fuchsia-device:llcpp",
    "//zircon/system/fidl/fuchsia-hardware-block:c",
    "//zircon/system/fidl/fuchsia-io:llcpp",
    "//zircon/system/fidl/fuchsia-mem:c",
    "//zircon/system/fidl/fuchsia-minfs:c",
  ]

  # TODO(46860): Fix the leaks and remove this.
  deps += [ "//build/config/sanitizers:suppress-lsan.DO-NOT-USE-THIS" ]
}

migrated_manifest("fs-manifest") {
  deps = [ ":fs" ]
}
