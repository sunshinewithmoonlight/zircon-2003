// WARNING: This file is machine generated by fidlc.

#include <lib/fidl/internal.h>

// Forward declarations for old <-> V1 mappings

static const fidl_type_t Vector4294967295nonnullable20HandlevmononnullableTable;
static const fidl_type_t Array20_20HandlevmononnullableTable;
static const fidl_type_t Vector4294967295nonnullable30Array20_20HandlevmononnullableTable;
extern const fidl_type_t test_name_UnionWithHandleTable;
extern const fidl_type_t test_name_HandlesInTypesTable;
static const fidl_type_t v1_Vector4294967295nonnullable23v1_HandlevmononnullableTable;
static const fidl_type_t v1_Array20_23v1_HandlevmononnullableTable;
static const fidl_type_t v1_Vector4294967295nonnullable36v1_Array20_23v1_HandlevmononnullableTable;
extern const fidl_type_t v1_test_name_UnionWithHandleTable;
extern const fidl_type_t v1_test_name_HandlesInTypesTable;

// Coding tables for old wire format.

extern const fidl_type_t test_name_UnionWithHandleTable;
extern const fidl_type_t test_name_TableWithHandleTable;
extern const fidl_type_t test_name_HandlesInTypesTable;


static const fidl_type_t HandlevmononnullableTable = {.type_tag=kFidlTypeHandle, {.coded_handle={.handle_subtype=ZX_OBJ_TYPE_VMO, .handle_rights=2147483648u, .nullable=kFidlNullability_Nonnullable}}};

static const fidl_type_t Vector4294967295nonnullable20HandlevmononnullableTable = {.type_tag=kFidlTypeVector, {.coded_vector={.element=&HandlevmononnullableTable, .max_count=4294967295u, .element_size=4u, .nullable=kFidlNullability_Nonnullable, .alt_type=&v1_Vector4294967295nonnullable23v1_HandlevmononnullableTable}}};

static const fidl_type_t Array20_20HandlevmononnullableTable = {.type_tag=kFidlTypeArray, {.coded_array={.element=&HandlevmononnullableTable, .array_size=20u, .element_size=4u, .alt_type=&v1_Array20_23v1_HandlevmononnullableTable}}};

static const fidl_type_t Vector4294967295nonnullable30Array20_20HandlevmononnullableTable = {.type_tag=kFidlTypeVector, {.coded_vector={.element=&Array20_20HandlevmononnullableTable, .max_count=4294967295u, .element_size=20u, .nullable=kFidlNullability_Nonnullable, .alt_type=&v1_Vector4294967295nonnullable36v1_Array20_23v1_HandlevmononnullableTable}}};


static const struct FidlUnionField Fields25test_name_UnionWithHandle[] = {
    /*FidlUnionField*/{.type=&HandlevmononnullableTable, .padding=0u, .xunion_ordinal=1u}
};
const fidl_type_t test_name_UnionWithHandleTable = {.type_tag=kFidlTypeUnion, {.coded_union={.fields=Fields25test_name_UnionWithHandle, .field_count=1u, .data_offset=4u, .size=8u, .name="test.name/UnionWithHandle", .alt_type=&v1_test_name_UnionWithHandleTable}}};

static const struct FidlTableField Fields25test_name_TableWithHandle[] = {
    /*FidlTableField*/{.type=&HandlevmononnullableTable, .ordinal=1u}
};
const fidl_type_t test_name_TableWithHandleTable = {.type_tag=kFidlTypeTable, {.coded_table={.fields=Fields25test_name_TableWithHandle, .field_count=1u, .name="test.name/TableWithHandle"}}};

static const struct FidlStructField Fields24test_name_HandlesInTypes[] = {
    /*FidlStructField*/{.type=&HandlevmononnullableTable, .offset=0u, .padding=4u},
    /*FidlStructField*/{.type=&Vector4294967295nonnullable20HandlevmononnullableTable, .offset=8u, .padding=0u},
    /*FidlStructField*/{.type=&Array20_20HandlevmononnullableTable, .offset=24u, .padding=4u},
    /*FidlStructField*/{.type=&Vector4294967295nonnullable30Array20_20HandlevmononnullableTable, .offset=48u, .padding=0u},
    /*FidlStructField*/{.type=&test_name_TableWithHandleTable, .offset=64u, .padding=0u},
    /*FidlStructField*/{.type=&test_name_UnionWithHandleTable, .offset=80u, .padding=0u}
};
const fidl_type_t test_name_HandlesInTypesTable = {.type_tag=kFidlTypeStruct, {.coded_struct={.fields=Fields24test_name_HandlesInTypes, .field_count=6u, .size=88u, .max_out_of_line=4294967295u, .contains_union=true, .name="test.name/HandlesInTypes", .alt_type=&v1_test_name_HandlesInTypesTable}}};

// Coding tables for v1 wire format.

extern const fidl_type_t v1_test_name_UnionWithHandleTable;
extern const fidl_type_t v1_test_name_TableWithHandleTable;
extern const fidl_type_t v1_test_name_HandlesInTypesTable;


static const fidl_type_t v1_HandlevmononnullableTable = {.type_tag=kFidlTypeHandle, {.coded_handle={.handle_subtype=ZX_OBJ_TYPE_VMO, .handle_rights=2147483648u, .nullable=kFidlNullability_Nonnullable}}};

static const fidl_type_t v1_Vector4294967295nonnullable23v1_HandlevmononnullableTable = {.type_tag=kFidlTypeVector, {.coded_vector={.element=&v1_HandlevmononnullableTable, .max_count=4294967295u, .element_size=4u, .nullable=kFidlNullability_Nonnullable, .alt_type=&Vector4294967295nonnullable20HandlevmononnullableTable}}};

static const fidl_type_t v1_Array20_23v1_HandlevmononnullableTable = {.type_tag=kFidlTypeArray, {.coded_array={.element=&v1_HandlevmononnullableTable, .array_size=20u, .element_size=4u, .alt_type=&Array20_20HandlevmononnullableTable}}};

static const fidl_type_t v1_Vector4294967295nonnullable36v1_Array20_23v1_HandlevmononnullableTable = {.type_tag=kFidlTypeVector, {.coded_vector={.element=&v1_Array20_23v1_HandlevmononnullableTable, .max_count=4294967295u, .element_size=20u, .nullable=kFidlNullability_Nonnullable, .alt_type=&Vector4294967295nonnullable30Array20_20HandlevmononnullableTable}}};


static const struct FidlXUnionField Fields28v1_test_name_UnionWithHandle[] = {
    /*FidlXUnionField*/{.type=&v1_HandlevmononnullableTable, .ordinal=1u}
};
const fidl_type_t v1_test_name_UnionWithHandleTable = {.type_tag=kFidlTypeXUnion, {.coded_xunion={.field_count=1u, .fields=Fields28v1_test_name_UnionWithHandle, .nullable=kFidlNullability_Nonnullable, .name="test.name/UnionWithHandle", .strictness=kFidlStrictness_Flexible, .alt_type=&test_name_UnionWithHandleTable}}};
static const struct FidlTableField Fields28v1_test_name_TableWithHandle[] = {
    /*FidlTableField*/{.type=&v1_HandlevmononnullableTable, .ordinal=1u}
};
const fidl_type_t v1_test_name_TableWithHandleTable = {.type_tag=kFidlTypeTable, {.coded_table={.fields=Fields28v1_test_name_TableWithHandle, .field_count=1u, .name="test.name/TableWithHandle"}}};

static const struct FidlStructField Fields27v1_test_name_HandlesInTypes[] = {
    /*FidlStructField*/{.type=&v1_HandlevmononnullableTable, .offset=0u, .padding=4u},
    /*FidlStructField*/{.type=&v1_Vector4294967295nonnullable23v1_HandlevmononnullableTable, .offset=8u, .padding=0u},
    /*FidlStructField*/{.type=&v1_Array20_23v1_HandlevmononnullableTable, .offset=24u, .padding=4u},
    /*FidlStructField*/{.type=&v1_Vector4294967295nonnullable36v1_Array20_23v1_HandlevmononnullableTable, .offset=48u, .padding=0u},
    /*FidlStructField*/{.type=&v1_test_name_TableWithHandleTable, .offset=64u, .padding=0u},
    /*FidlStructField*/{.type=&v1_test_name_UnionWithHandleTable, .offset=80u, .padding=0u}
};
const fidl_type_t v1_test_name_HandlesInTypesTable = {.type_tag=kFidlTypeStruct, {.coded_struct={.fields=Fields27v1_test_name_HandlesInTypes, .field_count=6u, .size=104u, .max_out_of_line=4294967295u, .contains_union=true, .name="test.name/HandlesInTypes", .alt_type=&test_name_HandlesInTypesTable}}};

