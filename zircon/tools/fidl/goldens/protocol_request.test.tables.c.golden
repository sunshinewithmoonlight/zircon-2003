// WARNING: This file is machine generated by fidlc.

#include <lib/fidl/internal.h>

// Forward declarations for old <-> V1 mappings

extern const fidl_type_t test_name_ParentGetChildRequestTable;
extern const fidl_type_t test_name_ParentGetChildResponseTable;
extern const fidl_type_t test_name_ParentGetChildRequestRequestTable;
extern const fidl_type_t test_name_ParentGetChildRequestResponseTable;
extern const fidl_type_t test_name_ParentTakeChildRequestTable;
extern const fidl_type_t test_name_ParentTakeChildRequestRequestTable;
extern const fidl_type_t v1_test_name_ParentGetChildRequestTable;
extern const fidl_type_t v1_test_name_ParentGetChildResponseTable;
extern const fidl_type_t v1_test_name_ParentGetChildRequestRequestTable;
extern const fidl_type_t v1_test_name_ParentGetChildRequestResponseTable;
extern const fidl_type_t v1_test_name_ParentTakeChildRequestTable;
extern const fidl_type_t v1_test_name_ParentTakeChildRequestRequestTable;

// Coding tables for old wire format.



extern const fidl_type_t test_name_ParentGetChildRequestTable;
static const struct FidlStructField Fields31test_name_ParentGetChildRequest[] = {};
const fidl_type_t test_name_ParentGetChildRequestTable = {.type_tag=kFidlTypeStruct, {.coded_struct={.fields=Fields31test_name_ParentGetChildRequest, .field_count=0u, .size=16u, .max_out_of_line=0u, .contains_union=false, .name="test.name/ParentGetChildRequest", .alt_type=&v1_test_name_ParentGetChildRequestTable}}};

static const fidl_type_t Protocol15test_name_ChildnonnullableTable = {.type_tag=kFidlTypeHandle, {.coded_handle={.handle_subtype=ZX_OBJ_TYPE_CHANNEL, .nullable=kFidlNullability_Nonnullable}}};

extern const fidl_type_t test_name_ParentGetChildResponseTable;
static const struct FidlStructField Fields32test_name_ParentGetChildResponse[] = {
    /*FidlStructField*/{.type=&Protocol15test_name_ChildnonnullableTable, .offset=16u, .padding=4u}
};
const fidl_type_t test_name_ParentGetChildResponseTable = {.type_tag=kFidlTypeStruct, {.coded_struct={.fields=Fields32test_name_ParentGetChildResponse, .field_count=1u, .size=24u, .max_out_of_line=0u, .contains_union=false, .name="test.name/ParentGetChildResponse", .alt_type=&v1_test_name_ParentGetChildResponseTable}}};

extern const fidl_type_t test_name_ParentGetChildRequestRequestTable;
static const struct FidlStructField Fields38test_name_ParentGetChildRequestRequest[] = {};
const fidl_type_t test_name_ParentGetChildRequestRequestTable = {.type_tag=kFidlTypeStruct, {.coded_struct={.fields=Fields38test_name_ParentGetChildRequestRequest, .field_count=0u, .size=16u, .max_out_of_line=0u, .contains_union=false, .name="test.name/ParentGetChildRequestRequest", .alt_type=&v1_test_name_ParentGetChildRequestRequestTable}}};

static const fidl_type_t Request15test_name_ChildnonnullableTable = {.type_tag=kFidlTypeHandle, {.coded_handle={.handle_subtype=ZX_OBJ_TYPE_CHANNEL, .nullable=kFidlNullability_Nonnullable}}};

extern const fidl_type_t test_name_ParentGetChildRequestResponseTable;
static const struct FidlStructField Fields39test_name_ParentGetChildRequestResponse[] = {
    /*FidlStructField*/{.type=&Request15test_name_ChildnonnullableTable, .offset=16u, .padding=4u}
};
const fidl_type_t test_name_ParentGetChildRequestResponseTable = {.type_tag=kFidlTypeStruct, {.coded_struct={.fields=Fields39test_name_ParentGetChildRequestResponse, .field_count=1u, .size=24u, .max_out_of_line=0u, .contains_union=false, .name="test.name/ParentGetChildRequestResponse", .alt_type=&v1_test_name_ParentGetChildRequestResponseTable}}};

extern const fidl_type_t test_name_ParentTakeChildRequestTable;
static const struct FidlStructField Fields32test_name_ParentTakeChildRequest[] = {
    /*FidlStructField*/{.type=&Protocol15test_name_ChildnonnullableTable, .offset=16u, .padding=4u}
};
const fidl_type_t test_name_ParentTakeChildRequestTable = {.type_tag=kFidlTypeStruct, {.coded_struct={.fields=Fields32test_name_ParentTakeChildRequest, .field_count=1u, .size=24u, .max_out_of_line=0u, .contains_union=false, .name="test.name/ParentTakeChildRequest", .alt_type=&v1_test_name_ParentTakeChildRequestTable}}};

extern const fidl_type_t test_name_ParentTakeChildRequestRequestTable;
static const struct FidlStructField Fields39test_name_ParentTakeChildRequestRequest[] = {
    /*FidlStructField*/{.type=&Request15test_name_ChildnonnullableTable, .offset=16u, .padding=4u}
};
const fidl_type_t test_name_ParentTakeChildRequestRequestTable = {.type_tag=kFidlTypeStruct, {.coded_struct={.fields=Fields39test_name_ParentTakeChildRequestRequest, .field_count=1u, .size=24u, .max_out_of_line=0u, .contains_union=false, .name="test.name/ParentTakeChildRequestRequest", .alt_type=&v1_test_name_ParentTakeChildRequestRequestTable}}};


// Coding tables for v1 wire format.



extern const fidl_type_t v1_test_name_ParentGetChildRequestTable;
static const struct FidlStructField Fields34v1_test_name_ParentGetChildRequest[] = {};
const fidl_type_t v1_test_name_ParentGetChildRequestTable = {.type_tag=kFidlTypeStruct, {.coded_struct={.fields=Fields34v1_test_name_ParentGetChildRequest, .field_count=0u, .size=16u, .max_out_of_line=0u, .contains_union=false, .name="test.name/ParentGetChildRequest", .alt_type=&test_name_ParentGetChildRequestTable}}};

static const fidl_type_t v1_Protocol18v1_test_name_ChildnonnullableTable = {.type_tag=kFidlTypeHandle, {.coded_handle={.handle_subtype=ZX_OBJ_TYPE_CHANNEL, .nullable=kFidlNullability_Nonnullable}}};

extern const fidl_type_t v1_test_name_ParentGetChildResponseTable;
static const struct FidlStructField Fields35v1_test_name_ParentGetChildResponse[] = {
    /*FidlStructField*/{.type=&v1_Protocol18v1_test_name_ChildnonnullableTable, .offset=16u, .padding=4u}
};
const fidl_type_t v1_test_name_ParentGetChildResponseTable = {.type_tag=kFidlTypeStruct, {.coded_struct={.fields=Fields35v1_test_name_ParentGetChildResponse, .field_count=1u, .size=24u, .max_out_of_line=0u, .contains_union=false, .name="test.name/ParentGetChildResponse", .alt_type=&test_name_ParentGetChildResponseTable}}};

extern const fidl_type_t v1_test_name_ParentGetChildRequestRequestTable;
static const struct FidlStructField Fields41v1_test_name_ParentGetChildRequestRequest[] = {};
const fidl_type_t v1_test_name_ParentGetChildRequestRequestTable = {.type_tag=kFidlTypeStruct, {.coded_struct={.fields=Fields41v1_test_name_ParentGetChildRequestRequest, .field_count=0u, .size=16u, .max_out_of_line=0u, .contains_union=false, .name="test.name/ParentGetChildRequestRequest", .alt_type=&test_name_ParentGetChildRequestRequestTable}}};

static const fidl_type_t v1_Request18v1_test_name_ChildnonnullableTable = {.type_tag=kFidlTypeHandle, {.coded_handle={.handle_subtype=ZX_OBJ_TYPE_CHANNEL, .nullable=kFidlNullability_Nonnullable}}};

extern const fidl_type_t v1_test_name_ParentGetChildRequestResponseTable;
static const struct FidlStructField Fields42v1_test_name_ParentGetChildRequestResponse[] = {
    /*FidlStructField*/{.type=&v1_Request18v1_test_name_ChildnonnullableTable, .offset=16u, .padding=4u}
};
const fidl_type_t v1_test_name_ParentGetChildRequestResponseTable = {.type_tag=kFidlTypeStruct, {.coded_struct={.fields=Fields42v1_test_name_ParentGetChildRequestResponse, .field_count=1u, .size=24u, .max_out_of_line=0u, .contains_union=false, .name="test.name/ParentGetChildRequestResponse", .alt_type=&test_name_ParentGetChildRequestResponseTable}}};

extern const fidl_type_t v1_test_name_ParentTakeChildRequestTable;
static const struct FidlStructField Fields35v1_test_name_ParentTakeChildRequest[] = {
    /*FidlStructField*/{.type=&v1_Protocol18v1_test_name_ChildnonnullableTable, .offset=16u, .padding=4u}
};
const fidl_type_t v1_test_name_ParentTakeChildRequestTable = {.type_tag=kFidlTypeStruct, {.coded_struct={.fields=Fields35v1_test_name_ParentTakeChildRequest, .field_count=1u, .size=24u, .max_out_of_line=0u, .contains_union=false, .name="test.name/ParentTakeChildRequest", .alt_type=&test_name_ParentTakeChildRequestTable}}};

extern const fidl_type_t v1_test_name_ParentTakeChildRequestRequestTable;
static const struct FidlStructField Fields42v1_test_name_ParentTakeChildRequestRequest[] = {
    /*FidlStructField*/{.type=&v1_Request18v1_test_name_ChildnonnullableTable, .offset=16u, .padding=4u}
};
const fidl_type_t v1_test_name_ParentTakeChildRequestRequestTable = {.type_tag=kFidlTypeStruct, {.coded_struct={.fields=Fields42v1_test_name_ParentTakeChildRequestRequest, .field_count=1u, .size=24u, .max_out_of_line=0u, .contains_union=false, .name="test.name/ParentTakeChildRequestRequest", .alt_type=&test_name_ParentTakeChildRequestRequestTable}}};


